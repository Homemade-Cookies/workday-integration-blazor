name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-backend:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Cache backend dependencies
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Run backend tests
        run: npm test
        working-directory: ./backend

      - name: Build backend
        run: npm run build
        working-directory: ./backend

      - name: Lint backend code
        run: npm run lint
        working-directory: ./backend

      - name: Run static code analysis for backend
        run: npm run analyze
        working-directory: ./backend

      - name: Generate backend code coverage report
        run: npm run coverage
        working-directory: ./backend

      - name: Upload backend code coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: backend/coverage

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Cache frontend dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Run frontend tests
        run: npm test
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Lint frontend code
        run: npm run lint
        working-directory: ./frontend

      - name: Run static code analysis for frontend
        run: npm run analyze
        working-directory: ./frontend

      - name: Generate frontend code coverage report
        run: npm run coverage
        working-directory: ./frontend

      - name: Upload frontend code coverage report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-report
          path: frontend/coverage

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        run: |
          echo "Deploying to server..."
          # Add deployment commands here
